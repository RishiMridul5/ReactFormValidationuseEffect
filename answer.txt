What does the AuthContextProvider do eactly.
Tell the steps used by the udemy trainer to migrate to AuthContextProvider pattern
=>
    AuthContextProvider returns <AuthContext.Provider></AuthContext.Provider>.
    It is a component function which will wrap App component and provide the context to all the wrapped(children) components.

    isLoggedIn, loginHandler and logouHandler which were previously in App component is now moved inside AuthContextProvider component and all these variables are made available in context.

    <AuthContext.Provider
      value={{
        isLoggedIn: isLoggedIn,
        onLogin: loginHandler,
        onLogout: logoutHandler,
        userEmail: userEmail,
      }}
    >
      {children}
    </AuthContext.Provider>

What are the disadvantage of Context Api and what is the solution
=> Some components and their functionalities are meant to be generic such as the Button component which is just a UI component. This component can be used to both for logging in the Login component and also to logout in the Navigation component. Using a context to assign a specific handler method on onClick event will restrict it's functionality to logout the user only.
Also, context is not optimized for high frequency changes. The solution to this is using a state management library such as Redux.

When should you call hooks and when you should not
Tell about the 3 rules and explain each one of them
=>
1. Can be used in functional components and custom hooks
2. Cannot be used 
    2.1 Inside a function (expect component function and custom hooks)
    2.2 Inside a block
3. Include all variables and functions except useState and useReducer used in the useEffect callback in the dependency list